install.packages("swirl")
library(swirl)
swirl()
5+7
x <-5+7
x
y<-x-3
y
z<-c(1.1, 9, 3.14)
?c
z
c(z,555,z)
z*2+100
mysqrt <-sqrt(Z-1)
mysqrt <-sqrt(z-1)
mySqrt <-sqrt(z-1)
mySqrt
myDiv <- z/mySqrt
myDiv
c(1,2,3) + C(0,10)
c(1,2,3,4) + C(0,10)
c(1,2,3,4) + C(0, 10)
c(1,2,3,4) + x<- C(0, 10)
x,-c(1,2,3,4)
x<-c(1,2,3,4)
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10,100)
x <- c(4, TRUE)
x
class.x
x.class
class?
1
class?x
is.numeric(x)
is.integer(x)
is.integer(x)
x<-list(2,"a","b", TRUE)
x[[1]]
x <- c(3, 5, 1, 10, 12, 6)
x[x < 6] == 0
x
x[x %in% 1:5] <- 0
x
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
pwd()
wd()
cwd()
detwd()
getwd()
clr\
clr()
setwd("C:/Users/VINOD JOHN/projectD/RProgram"")
library(datasets)
data(mtcars)
abs(mean(mtcars[mtcars$cyl == 4, "hp"])-mean(mtcars[mtcars$cyl == 8, "hp"]))
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
library(datasets)
data(iris)
apply(iris[, 1:4], 2, mean)
mean(iris[iris$Sepal.Length == "virginica"])
vir <-subset(iris, iris$Sepal.Length == "virginica")
vir
?vir
apply(vir[, 1:4], 2, mean)
vir <-subset(iris, Sepal.Length == "virginica")
?vir
vir
iris
vir1 <-subset(iris, Species == "virginica")
apply(vir1[, 1:4], 2, mean)
library(datasets)
data(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
setwd("C:/Users/VINOD JOHN/projectD/RProgram/dataclean")
mydata <- read.csv(file='getdata_data_ss06hid.csv',sep=',',header=T)
mydata
mydata$aLocal <- with(mydata, mydata[ACR == 3 & AGS == , ])
mydata$aLocal <- with(mydata, mydata[ACR == 3 & AGS == 6 , ])
mydata$aLocal < mydata$ACR == 3 & mydata$AGS == 6)
mydata$aLocal < mydata$ACR = 3 & mydata$AGS = 6)
mydata$aLocal < mydata$ACR = 3 & mydata$AGS = 6
aLocal < mydata$ACR = 3 & mydata$AGS = 6
mydata$ACR = 3 & mydata$AGS = 6
mydata$ACR == 3 & mydata$AGS == 6
t <- mydata$ACR == 3 & mydata$AGS == 6
which(t)
clear
install.packages('ReadImages')
install.packages("jpeg")
library(help = jpeg)
library(jpeg)
img <- readJPEG(system.file("img", "getdata_jeff.jpg", package="jpeg"))
img <- readJPEG(system.file("img", "getdata_jeff.jpeg", package="jpeg"))
img <- readJPEG(system.file("img", "getdata_jeff.jpg", package="jpeg"))
img <- readJPEG(system.file("img", "C:/Users/VINOD JOHN/projectD/RProgram/dataclean/getdata_jeff.jpg", package="jpeg"))
file.info("C:/Users/VINOD JOHN/projectD/RProgram/dataclean/getdata_jeff.jpg")
install.packages("bi0ps")
install.packages("biops")
install.packages("biOps")
library(biOps)
x <- readJpeg("getdata_jeff.jpg")
img <- readJPEG(system.file("img", "C:/Users/VINOD JOHN/projectD/RProgram/dataclean/getdata_jeff.jpg", package="jpg"), TRUE)
quantile(duration, c(.30, .80))
quantile(x, c(.30, .80))
quantile(x, c(30, 80))
quantile(x, c(.30, .80))
myimg <- readJpeg("getdata_jeff.jpg", native = TRUE)
myimg <- readJPEG("getdata_jeff.jpg", native = TRUE)
quantile(myimg, c(.30, .80))
setwd("C:/Users/VINOD JOHN/projectD/RProgram/dataclean/quiz3_data")
mydata <- read.csv(file='getdata_data_ss06hid.csv',sep=',',header=T)
mydata <- read.csv(file='getdata-data-ss06hid.csv',sep=',',header=T)
mydata$aLocal < mydata$ACR = 3 & mydata$AGS = 6
mydata$aLocal < mydata$ACR == 3 & mydata$AGS == 6)
mydata$aLocal <- with(mydata, mydata[ACR == 3 & AGS == 6 , ])
mylocal <- subset(mydata, ACR == 3 & AGS == 6)
mylocal
transform(mydata, ACR == 3 & AGS == 6)
transform(mydata, logv= ACR == 3 & AGS == 6)
names(mydata)
transform(mydata, logv= ACR == 3 & AGS == 6)
mydata1<- transform(mydata, logv= ACR == 3 & AGS == 6)
names(mydata1)
head(mydata1)
mydata1[-which(logv),]
class(mydata1$logv)
mydata1[-which(logv),]
mydata1[-which(mydata1$logv),]
mydata1[which(logv),]
mydata1[-which($logv),]
mydata1<- subset(mydata[-which(ACR == 3 & AGS == 6), ])
mydata1<- subset(mydata[-which(mydata$ACR == 3 & mydata$AGS == 6), ])
mydata1
mydata[-which(mydata$ACR == 3 & mydata$AGS == 6), ]
list <- mydata[-which(mydata$ACR == 3 & mydata$AGS == 6), ]
list
which(with(mydata, mydata$ACR == 3 & mydata$AGS == 6), ]))
which(with(mydata, mydata$ACR == 3 & mydata$AGS == 6)))
which(with(mydata, mydata$ACR == 3 & mydata$AGS == 6))
readJPEG(source, native = FALSE)
readJPEG("getdata-jeff.JPEG", native = FALSE)
install.packages("jpeg")
library("jpeg")
readJPEG("getdata-jeff.JPEG", native = FALSE)
myjpeg <-readJPEG("getdata-jeff.jpeg", native = FALSE)
myjpeg <-readJPEG("getdata-jeff.jpg", native = FALSE)
myjpeg <-readJPEG("getdata-jeff.jpg", native = TRUE)
myjpeg
names(myjpeg)
class(myjpeg)
head(myjpeg)
quantile(img, probs = c(0.3, 0.8))
quantile(myjpeg, probs = c(0.3, 0.8))
datagdp <- read.csv(file='getdata_data_GDP.csv',sep=',',header=T)
dataEds <- read.csv(file='getdata_data_EDSTATS_Country.csv',sep=',',header=T)
names(datagdp)
names(dataEds)
head(datagdp)
head(dataEds)
tail(datagdp)
datagdp$X
names(dataEds)
library('qdapTools')
dataEds$gdp <-lookup(dataEds$CountryCode, datagdp[, 1:2])
head(dataEds)
a<-dataEds$gdp
a
a<-!is.NA(dataEds$gdp)
a<-!is.na(dataEds$gdp)
a
a.True
a<-subset(dataEds, !is.na(gdp))
a
a<-subset(dataEds,is.numeric(gdp) )
a
a<-subset(dataEds, !is.na(gdp) & gdp <> '')
a<-subset(dataEds, !is.na(gdp) & gdp !='')
a
dim(a)
a1 <- a[order(-gdp),]
a1 <- a[order(-a$gdp),]
a1 <- a[order(gdp),]
names(a)
a1 <- a[order(a$gdp),]
a1 <- a[order(-a$gdp),]
a1
a1 <- a[order(gdp),]
names(a)
a1 <- a[order("gdp"),]
a1 <- a[order(-"gdp"),]
a1 <- a[order(gdp),]
a1 <- a[order(a$gdp),]
a1
class(a$gdp)
a1 <- a[order(levels((a$gdp))-1,]
a1 <- a[order(levels(a$gdp))-1,]
a1
a1 <- a[order(levels(a$gdp))-1,]
a1
a1 <- a[order(as.integer(levels(a$gdp))),]
a1
a$gpdi <- as.integer(a$gdp)
a1 <- a[order(a$gdp1),]
a1 <- a[sort(a$gdp1),]
a
write.csv(a, file="sortedgdp.csv")
names(dataEds)
names(datagdp)
datagdp
datagdp <- read.csv(file='Qdata\\getdata_data_GDP.csv',sep=',',header=T)
datagdp <- read.csv(file='Qdata\\getdata_data_GDP.csv',sep=',',header=T)
dataEds <- read.csv(file='Qdata\\getdata_data_EDSTATS_Country.csv',sep=',',header=T)
savehistory("C:/Users/VINOD JOHN/Project-R/RProgram/dataclean/project/data/Qdata/R_History.Rhistory")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf = read.csv(path2csv, stringsAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
install.package(ddplyr)
install.packages(ddplyr)
install.packages(dplyr)
install.packages("dplyr")
install.packages("dplyr")
remove.packages("dplyr")
remove.packages("dplyr",,0.2)
remove.packages("dplyr",,"0.2")
remove.packages("dplyr")
install.packages("dplyr")
packageVersion("dplyr")
wd
cwd
pwd
wd
getwd()
remove.packages("dplyr")
install.packages("dplyr", repos=NULL)
install.packages("dplyr", repos=NULL)
install.packages("dplyr", repos=NULL)
install.packages("dplyr", repos=NULL)
getwd()
install.packages("dplyr", repos=NULL)
install.packages("dplyr", repos=NULL)
install.packages("dplyr", repos=NULL)
install.packages("dplyr.zip", repos=NULL)
packageVersion("dplyr")
swrill()
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
swirl
swirl()
cran <- tbl_df(mydf)
packageVersion("dplyr")
install.packages("dplyr.zip", repos=NULL)
detach_package(dplyr)
detach package(dplyr)
detach package("dplyr")
detach ("dplyr")
detach (dplyr)
detach(package:dplyr)
detach(package:fortunes)
install.packages("dplyr.zip", repos=NULL)
packageVersion("dplyr")
library(dplyr)
library("dplyr")
install.packages("dplyr.zip", repos=NULL)
quit
quit()
install.packages("dplyr.zip", repos=NULL)
packageVersion("dplyr")
swril()
swirl()
library(swirl)
swirl()
install package ("DBI")
install package("DBI")
install packages("DBI")
install packages('DBI')
install.packages("DBI")
swirl()
install.packages("lazyeval")
install.packages("swirl")
install.packages("swirl")
exit
quit()
install.packages("lazyeval")
install.packages("swirl")
swirl()
library(swirl)
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
install.packages("plyr",dependencies=TRUE)
install.packages("dplyr", dependencies=TRUE,repos=NULL)
install.packages("dplyr.zip", dependencies=TRUE,repos=NULL)
install.packages("ggplot2",dependencies=TRUE)
install.packages("colorspace",dependencies=TRUE)
install.packages("stringr",dependencies=TRUE)
install.packages("RColorBrewer",dependencies=TRUE)
install.packages("reshape2",dependencies=TRUE)
install.packages("zoo",dependencies=TRUE)
install.packages("proto",dependencies=TRUE)
install.packages("scales",dependencies=TRUE)
install.packages("car",dependencies=TRUE)
install.packages("dichromat",dependencies=TRUE)
install.packages("gtable",dependencies=TRUE)
install.packages("munsell",dependencies=TRUE)
install.packages("labeling",dependencies=TRUE)
install.packages("Hmisc",dependencies=TRUE)
install.packages("rJava",dependencies=TRUE)
install.packages("mvtnorm",dependencies=TRUE)
install.packages("bitops",dependencies=TRUE)
install.packages("rgl",dependencies=TRUE)
install.packages("foreign",dependencies=TRUE)
install.packages("",dependencies=TRUE)
install.packages("XML",dependencies=TRUE)
install.packages("lattice",dependencies=TRUE)
install.packages("e1071",dependencies=TRUE)
install.packages("gtools",dependencies=TRUE)
install.packages("sp",dependencies=TRUE)
install.packages("gdata",dependencies=TRUE)
install.packages("Rcpp",dependencies=TRUE)
install.packages("MASS",dependencies=TRUE)
install.packages("Matrix",dependencies=TRUE)
install.packages("lmtest",dependencies=TRUE)
install.packages("survival",dependencies=TRUE)
install.packages("caTools",dependencies=TRUE)
install.packages("multcomp",dependencies=TRUE)
install.packages("RCurl",dependencies=TRUE)
install.packages("knitr",dependencies=TRUE)
install.packages("xtable",dependencies=TRUE)
install.packages("xts",dependencies=TRUE)
install.packages("rpart",dependencies=TRUE)
install.packages("evaluate",dependencies=TRUE)
install.packages("",dependencies=TRUE)
install.packages("RODBC",dependencies=TRUE)
install.packages("quadprog",dependencies=TRUE)
install.packages("tseries",dependencies=TRUE)
install.packages("DBI",dependencies=TRUE)
install.packages("nlme",dependencies=TRUE)
install.packages("lme4",dependencies=TRUE)
install.packages("reshape",dependencies=TRUE)
install.packages("sandwich",dependencies=TRUE)
install.packages("leaps",dependencies=TRUE)
install.packages("gplots",dependencies=TRUE)
install.packages("abind",dependencies=TRUE)
install.packages("randomForest",dependencies=TRUE)
install.packages("",dependencies=TRUE)
install.packages("Rcmdr",dependencies=TRUE)
install.packages("coda",dependencies=TRUE)
install.packages("maps",dependencies=TRUE)
install.packages("igraph",dependencies=TRUE)
install.packages("formatR",dependencies=TRUE)
install.packages("maptools",dependencies=TRUE)
install.packages("RSQLite",dependencies=TRUE)
install.packages("psych",dependencies=TRUE)
install.packages("KernSmooth",dependencies=TRUE)
install.packages("rgdal",dependencies=TRUE)
install.packages("RcppArmadillo",dependencies=TRUE)
install.packages("effects",dependencies=TRUE)
install.packages("sem",dependencies=TRUE)
install.packages("vcd",dependencies=TRUE)
install.packages("XLConnect",dependencies=TRUE)
install.packages("markdown",dependencies=TRUE)
install.packages("timeSeries",dependencies=TRUE)
install.packages("timeDate",dependencies=TRUE)
install.packages("RJSONIO",dependencies=TRUE)
install.packages("cluster",dependencies=TRUE)
install.packages("scatterplot3d",dependencies=TRUE)
install.packages("nnet",dependencies=TRUE)
install.packages("fBasics",dependencies=TRUE)
install.packages("forecast",dependencies=TRUE)
install.packages("quantreg",dependencies=TRUE)
install.packages("foreach",dependencies=TRUE)
install.packages("chron",dependencies=TRUE)
install.packages("plotrix",dependencies=TRUE)
install.packages("matrixcalc",dependencies=TRUE)
install.packages("aplpack",dependencies=TRUE)
install.packages("",dependencies=TRUE)
install.packages("strucchange",dependencies=TRUE)
install.packages("iterators",dependencies=TRUE)
install.packages("mgcv",dependencies=TRUE)
install.packages("",dependencies=TRUE)
install.packages("kernlab",dependencies=TRUE)
install.packages("SparseM",dependencies=TRUE)
install.packages("tree",dependencies=TRUE)
install.packages("robustbase",dependencies=TRUE)
install.packages("vegan",dependencies=TRUE)
install.packages("devtools",dependencies=TRUE)
install.packages("latticeExtra",dependencies=TRUE)
install.packages("modeltools",dependencies=TRUE)
install.packages("xlsx",dependencies=TRUE)
install.packages("slam",dependencies=TRUE)
install.packages("TTR",dependencies=TRUE)
install.packages("quantmod",dependencies=TRUE)
install.packages("relimp",dependencies=TRUE)
install.packages("akima",dependencies=TRUE)
install.packages("memoise",dependencies=TRUE)
packageversion("dplyr")
package version("dplyr")
package.version("dplyr")
packageVersion("dplyr")
install.packages("DBI")
install.packages("lazyeval")
install.packages("swirl"L)
install.packages("swirl")
setwd("C:\\Users\\VINOD JOHN\\ProjectD\\ExData\\ExData_Plotting1")
source('C:/Users/VINOD JOHN/projectD/ExData/ExData_Plotting1/plot1.R')
source('C:/Users/VINOD JOHN/projectD/ExData/ExData_Plotting1/plot2.R')
source('C:/Users/VINOD JOHN/projectD/ExData/ExData_Plotting1/plot2.R')
source('C:/Users/VINOD JOHN/projectD/ExData/ExData_Plotting1/plot3.R')
source('C:/Users/VINOD JOHN/projectD/ExData/ExData_Plotting1/plot4.R')
setwd("C:\\Users\\VINOD JOHN\\ProjectD\\ExData\\ExData_Plotting1")
source('C:/Users/VINOD JOHN/projectD/ExData/ExData_Plotting1/plot4.R')
source('C:/Users/VINOD JOHN/projectD/ExData/ExData_Plotting1/plot4.R')
setwd("C:\\Users\\VINOD JOHN\\ProjectD\\ExData\\ExData_Plotting1")
source(plot1.R)
source("plot1.R")
source("plot2.R")
source("plot3.R")
source("plot4.R")
